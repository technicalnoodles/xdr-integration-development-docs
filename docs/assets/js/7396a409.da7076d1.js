"use strict";(self.webpackChunkintegration_development_docs=self.webpackChunkintegration_development_docs||[]).push([[626],{1589:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/generic-relay-connected-2fe60c971df2e7f52acc6e05aa320507.png"},2327:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/ok-status-jq-511baeb04b034793467e34f2c27b8fdf.png"},3016:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/xdr-integrations-0ae924d56ae05f8dcf3a041d323ae3c8.png"},3029:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/ok-status-41764fcbf4fede0c0e5d1f87b7ec3315.png"},4053:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/relay-settings-57a0252fadf21eea3fe34e4801485a63.png"},4156:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/third-party-55408186ea6f8ed436cb330d27036994.png"},6419:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/generic-relay-435e87a03a21ca9e504fafa4e0eddea4.png"},6960:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/ngrok-status-09b1d57e1d624be74c4850f47ced93aa.png"},7209:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/settings-6a98eabacf93fc9217249211149d0432.png"},7877:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/running-server-59fab7a0e186b67a69952c6e313ef333.png"},8212:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"relay-module/create-a-relay","title":"Creating a Relay Module","description":"To start off, we can create a relay module using one of Cisco XDR\'s relay templates for Python, NodeJs, or Go. If these are not desireable, the module can be made in any other language as long it is able to receive and respond to API requests.","source":"@site/mdx-docs/relay-module/00-create-a-relay.mdx","sourceDirName":"relay-module","slug":"/relay-module/create-a-relay","permalink":"/xdr-integration-development-docs/docs/relay-module/create-a-relay","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Relay Module Development","permalink":"/xdr-integration-development-docs/docs/category/relay-module-development"},"next":{"title":"Incident Feature Development","permalink":"/xdr-integration-development-docs/docs/category/incident-feature-development"}}');var o=n(4848),a=n(8453);const r={sidebar_position:1},i="Creating a Relay Module",l={},d=[{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Clone a Template",id:"clone-a-template",level:2},{value:"Code Explanation",id:"code-explanation",level:2},{value:"Test the Relay Module Locally",id:"test-the-relay-module-locally",level:2},{value:"Test the Module Locally (from XDR)",id:"test-the-module-locally-from-xdr",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"creating-a-relay-module",children:"Creating a Relay Module"})}),"\n",(0,o.jsx)(t.p,{children:"To start off, we can create a relay module using one of Cisco XDR's relay templates for Python, NodeJs, or Go. If these are not desireable, the module can be made in any other language as long it is able to receive and respond to API requests."}),"\n",(0,o.jsx)(t.p,{children:"For the rest of this guide, we will be using NodeJs as our preferred relay module programming language. We will be using VS Code as well for our IDE."}),"\n",(0,o.jsx)(t.h2,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,o.jsx)(t.p,{children:"If using Python, NodeJs, or Go, please install the required software to make sure code will run on your operating system."}),"\n",(0,o.jsx)(t.h2,{id:"clone-a-template",children:"Clone a Template"}),"\n",(0,o.jsxs)(t.p,{children:["Open a terminal and run this command ",(0,o.jsx)(t.code,{children:"git clone <repo_here>"})]}),"\n",(0,o.jsx)(t.admonition,{type:"danger",children:(0,o.jsx)(t.p,{children:"Need to add the github repos here"})}),"\n",(0,o.jsxs)(t.p,{children:["We now need to change into the directory of the template we just cloned. We should now be in the ",(0,o.jsx)(t.code,{children:"node-express"})," directory. You may rename this to any other name you want, but this guide will use ",(0,o.jsx)(t.code,{children:"node-express"}),". Now let us install all of the dependencies. Run ",(0,o.jsx)(t.code,{children:"node i"})," in the terminal, that will install all the dependencies from the ",(0,o.jsx)(t.code,{children:"package.json"})," file."]}),"\n",(0,o.jsx)(t.h2,{id:"code-explanation",children:"Code Explanation"}),"\n",(0,o.jsx)(t.h2,{id:"test-the-relay-module-locally",children:"Test the Relay Module Locally"}),"\n",(0,o.jsxs)(t.p,{children:["Before we get to coding the entire module and then find out the basic functionality of actually running and responding doesn't work, we want to first run the relay module locally. To do this with Node, we need to be in the ",(0,o.jsx)(t.code,{children:"node-express"})," directory and in our terminal run the command ",(0,o.jsx)(t.code,{children:"node index.js"}),". Based on the template, it will start a server on port 5000."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"server running",src:n(7877).A+"",width:"868",height:"90"})}),"\n",(0,o.jsxs)(t.p,{children:["Now we can do a test to check if the health check is working for the relay module. In another terminal window or tab, run ",(0,o.jsx)(t.code,{children:"curl localhost:5000/health"}),". This should return a status ok and that means we have a running web server that responds to requests. But we need to know if XDR will be able to query it as well."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"ok status",src:n(3029).A+"",width:"1278",height:"64"})}),"\n",(0,o.jsxs)(t.p,{children:["If you have the ",(0,o.jsx)(t.code,{children:"jq"})," command installed, we can pipe the command into jq and get an easier to read version of the status. ",(0,o.jsx)(t.code,{children:"curl localhost:5000/health | jq"})," This will be useful as we build the relay module."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"ok status",src:n(2327).A+"",width:"1296",height:"262"})}),"\n",(0,o.jsx)(t.h2,{id:"test-the-module-locally-from-xdr",children:"Test the Module Locally (from XDR)"}),"\n",(0,o.jsx)(t.p,{children:"To test the module from our on-prem device (laptop, desktop or other internal development server), we will use ngrok to faciliate the connection between the local server and XDR."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"if you do not want to use ngrok, I would recommend developing the relay in a cloud provider with a public IP on the VM, or by port forwarding to your development server. Please do not leave either of these options constantly running because of security risks."})}),"\n",(0,o.jsxs)(t.p,{children:["We must first get ngrok from this link: ",(0,o.jsx)(t.a,{href:"https://download.ngrok.com/",children:"https://download.ngrok.com/"})]}),"\n",(0,o.jsxs)(t.p,{children:["Then follow the isntructions to get a ngrok auth token added to your profile. Then using the ",(0,o.jsx)(t.em,{children:"Ephemeral Domain"})," option, run the command listed but change the port to 5000. It should look similar to this command ",(0,o.jsx)(t.code,{children:"ngrok http http://localhost:5000"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["It should return a status page in your terminal:\n",(0,o.jsx)(t.img,{alt:"ngrok status",src:n(6960).A+"",width:"1822",height:"404"})]}),"\n",(0,o.jsxs)(t.p,{children:["Copy the ",(0,o.jsx)(t.em,{children:"Forwarding"})," URL and store it somewhere easily accessible. Now, let us test that we can get to the relay module externally now."]}),"\n",(0,o.jsxs)(t.p,{children:["Run ",(0,o.jsx)(t.code,{children:"curl <forwarding url>/health | jq"}),"\nIt should return the same status ok we got earlier when testing locally. This means we can get this working with XDR.\n",(0,o.jsx)(t.img,{alt:"ngrok status ok",src:n(9761).A+"",width:"2020",height:"260"})]}),"\n",(0,o.jsxs)(t.p,{children:["Since the ngrok tunnel is working, we need to log into XDR and go to the Integrations section. To do this, go to ",(0,o.jsx)(t.code,{children:"Administration -> Integrations"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"integrations",src:n(3016).A+"",width:"792",height:"1068"})}),"\n",(0,o.jsxs)(t.p,{children:["Then go to ",(0,o.jsx)(t.code,{children:"Third Party Integrations"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"third party integrations",src:n(4156).A+"",width:"624",height:"620"})}),"\n",(0,o.jsxs)(t.p,{children:["Once there, scroll down until you find the ",(0,o.jsx)(t.code,{children:"Generic Serverless Relay"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"generic relay",src:n(6419).A+"",width:"802",height:"570"})}),"\n",(0,o.jsxs)(t.p,{children:["Click on the ",(0,o.jsx)(t.em,{children:"+"})," sign to add this to your XDR account."]}),"\n",(0,o.jsx)(t.p,{children:"It should bring up a new page where we can setup the relay."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"relay settings",src:n(4053).A+"",width:"3232",height:"1500"})}),"\n",(0,o.jsxs)(t.p,{children:["For this guide, we will use the ",(0,o.jsx)(t.code,{children:"crt.sh"})," service as the our integration. You may use any that want, but to be able to follow along step by step, we recommend using the ",(0,o.jsx)(t.code,{children:"crt.sh"})," service as well."]}),"\n",(0,o.jsxs)(t.p,{children:["In the ",(0,o.jsx)(t.em,{children:"Integration Name"})," field, input ",(0,o.jsx)(t.em,{children:"CRT.SH"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["In the ",(0,o.jsx)(t.em,{children:"URL"})," field, enter the ngrok ",(0,o.jsx)(t.em,{children:"Forwarder"})," URL with nothing at the end of it."]}),"\n",(0,o.jsxs)(t.p,{children:["In the ",(0,o.jsx)(t.em,{children:"Bearer"})," field, you may enter whatever you want. We will not be using one at the moment."]}),"\n",(0,o.jsx)(t.p,{children:"Your relay settings should look similar to the below:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"relay settings",src:n(7209).A+"",width:"1610",height:"992"})}),"\n",(0,o.jsxs)(t.p,{children:["Before we click on ",(0,o.jsx)(t.em,{children:"Add"}),", we need change the health check from a GET to a POST. Go to the ",(0,o.jsx)(t.code,{children:"routes -> health"})," directory. Open the ",(0,o.jsx)(t.code,{children:"healthRoute.js"})," file. It should look like this:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",metastring:"healthRoute.js",children:"module.exports = (app) => {\n  app.get('/health', async (req, res) => {\n    res.send({ data: { status: 'ok' } });\n  });\n};\n"})}),"\n",(0,o.jsxs)(t.p,{children:["We need to change the GET type to a POST. Replace ",(0,o.jsx)(t.code,{children:"get"})," with ",(0,o.jsx)(t.code,{children:"post"}),". It should now lok like the below:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",metastring:"healthRoute.js",children:"module.exports = (app) => {\n  app.post('/health', async (req, res) => {\n    res.send({ data: { status: 'ok' } });\n  });\n};\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Save this file and then restart the Node server by using CTRL + C then running it with ",(0,o.jsx)(t.code,{children:"node index.js"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Now that we have done that, we can click on ",(0,o.jsx)(t.em,{children:"Add"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"You should get a connected message."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"relay settings",src:n(1589).A+"",width:"1606",height:"356"})}),"\n",(0,o.jsx)(t.p,{children:"With this, we have finished making sure the module is running and accessible and that XDR can connect to it."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["In the future, we will need to move away from using this generic module and move towards a full module which has a ",(0,o.jsx)(t.em,{children:"module definition"})," added to XDR. We will keep that in mind moving forward and make it fairly easy to make that conversion later on."]})})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var s=n(6540);const o={},a=s.createContext(o);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(a.Provider,{value:t},e.children)}},9761:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/ngrok-status-ok-d80c429fe629689458a41e60405b6bbc.png"}}]);